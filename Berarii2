#include <fstream>
#include <vector>
const std :: string programName = "berarii2";
std :: ifstream f(programName + ".in");
std :: ofstream g(programName + ".out");
const int MAX = 1E6;
int N, M, P;
bool use[MAX + 5];
std :: vector <int> Graph[MAX + 5];
void read();
void print();
void dfs(int);
int contor(int);
void sol();
int main() {
    int nr(0);
    read();
    sol();
    g << contor(nr) << "\n";
    print();
    return 0x0;
}
void read() {
    f >> N >> M >> P;
    for(int i = 1; i <= M; i++){
        int x, y;
        f >> x >> y;
        Graph[y].push_back(x);
    }
    for(int i = 1; i <= P; i++){
        int x;
        f >> x;
        use[x] = true;
    }
}
void print() {
    for (int i = 1; i <= N; i++)
        if (!use[i])
            g << i << "\n";
}
void dfs(int node) {
    use[node] = true;
    for (auto x : Graph[node])
        if(!use[x]) {
            use[x] = true;
            dfs(x);
        }
}
int contor(int nr) {
    for(int i = 1; i <= N; i++)
        if(!use[i])
            nr++;
    return nr;
}
void sol() {
    for(int i = 1; i <= N; ++i)
        if(use[i])
            dfs(i);
}
