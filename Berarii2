#include <bits/stdc++.h>
using namespace std;
const int MAX = 1000005;
int N, M, P, nr, x, y;
bool use[MAX];
vector<int> graph[MAX];
void read();
void print();
void dfs(int);
int contor();
void solcont();
void sol();
int main(){
    read();
    sol();
    solcont();
    print();
    return 0;
}
void read(){
    ifstream f("berarii2.in");
    f >> N >> M >> P;
    for(int i = 1; i <= M; i++){
        f >> x >> y;
        graph[y].push_back(x);
    }
    for(int i = 1; i <= P; i++){
        f >> x;
        use[x] = true;
    }
}
void print(){
    ofstream g("berarii2.out");
    for(int i = 1; i <= N; i++)
        if(!use[i])
            g << i << "\n";
}
void dfs(int node){
    use[node] = true;
    for(int x : graph[node])
        if(!use[x]){
            use[x] = true;
            dfs(x);
        }
}
int contor(){
    for(int i = 1; i <= N; i++)
        if(!use[i])
            nr++;
    return nr;
}
void solcont(){
    ofstream g("berarii2.out");
    g << contor() << "\n";
}
void sol(){
    for(int i = 1; i <= N; ++i)
        if(use[i])
            dfs(i);
}
